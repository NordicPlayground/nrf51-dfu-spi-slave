<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\_build\nrf51422_xxac.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\_build\nrf51422_xxac.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Thu Sep 24 16:17:26 2015
<BR><P>
<H3>Maximum Stack Usage =        208 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; test_update &rArr; dfu_spi_send_init_packet &rArr; spi_master_com_tx &rArr; send_single_packet &rArr; spi_master_send_recv &rArr; spi_master_buffer_init
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">ADC_IRQHandler</a><BR>
 <LI><a href="#[25]">__asm___11_nrf_delay_c_532987f3__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">__asm___11_nrf_delay_c_532987f3__nrf_delay_us</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[c]">ADC_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[14]">CCM_AAR_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[13]">ECB_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[b]">GPIOTE_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[18]">LPCOMP_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[6]">POWER_CLOCK_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[17]">QDEC_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[7]">RADIO_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[12]">RNG_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[10]">RTC0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[16]">RTC1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[9]">SPI0_TWI0_IRQHandler</a> from spi_master.o(i.SPI0_TWI0_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[a]">SPI1_TWI1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[19]">SWI0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1a]">SWI1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1b]">SWI2_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1c]">SWI3_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1d]">SWI4_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1e]">SWI5_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[20]">SystemInit</a> from system_nrf51.o(i.SystemInit) referenced from arm_startup_nrf51.o(.text)
 <LI><a href="#[11]">TEMP_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[d]">TIMER0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[e]">TIMER1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[f]">TIMER2_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[8]">UART0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[15]">WDT_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[21]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from arm_startup_nrf51.o(.text)
 <LI><a href="#[1f]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[22]">spi_master_event_handler</a> from spi_master_com_interface.o(i.spi_master_event_handler) referenced from spi_master_com_interface.o(i.spi_master_com_init)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[21]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(.text)
</UL>
<P><STRONG><a name="[56]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[23]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[29]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[57]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[58]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[59]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[5a]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[5b]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[25]"></a>__asm___11_nrf_delay_c_532987f3__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, nrf_delay.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_nrf_delay_c_532987f3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_nrf_delay_c_532987f3__nrf_delay_us
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>CCM_AAR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>ECB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>GPIOTE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>LPCOMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>POWER_CLOCK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>QDEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>RADIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RTC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>RTC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SPI1_TWI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SWI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SWI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SWI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SWI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SWI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SWI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TEMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_single_packet
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_spi_send_start_packet
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_spi_send_init_packet
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_spi_send_data_packet
</UL>

<P><STRONG><a name="[46]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_com_init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_update
</UL>

<P><STRONG><a name="[5c]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[27]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[5d]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[26]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_single_packet
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[28]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[24]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[61]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[9]"></a>SPI0_TWI0_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, spi_master.o(i.SPI0_TWI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SPI0_TWI0_IRQHandler &rArr; spi_master_send_recv_irq &rArr; spi_master_signal_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv_irq
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_get_instance
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SystemInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, system_nrf51.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_manual_peripheral_setup_needed
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_disabled_in_debug_needed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(.text)
</UL>
<P><STRONG><a name="[62]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[63]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[64]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[44]"></a>app_error_handler</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, app_error.o(i.app_error_handler))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_signal_evt
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv_irq
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_initial_bytes
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_init_hw_instance
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_buffer_release
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_buffer_init
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_open
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_evt_handler_reg
</UL>

<P><STRONG><a name="[38]"></a>crc16_compute</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, crc16.o(i.crc16_compute))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = crc16_compute
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_single_packet
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_update
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_image_crc
</UL>

<P><STRONG><a name="[2e]"></a>dfu_spi_init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, dfu_spi_master_lib.o(i.dfu_spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = dfu_spi_init &rArr; spi_init &rArr; spi_master_com_init &rArr; spi_master_open &rArr; spi_master_init_hw_instance
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[30]"></a>dfu_spi_send_data_packet</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfu_spi_master_lib.o(i.dfu_spi_send_data_packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = dfu_spi_send_data_packet &rArr; spi_master_com_tx &rArr; send_single_packet &rArr; spi_master_send_recv &rArr; spi_master_buffer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_com_tx
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_com_busy
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_update
</UL>

<P><STRONG><a name="[34]"></a>dfu_spi_send_init_packet</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, dfu_spi_master_lib.o(i.dfu_spi_send_init_packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = dfu_spi_send_init_packet &rArr; spi_master_com_tx &rArr; send_single_packet &rArr; spi_master_send_recv &rArr; spi_master_buffer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_com_tx
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_com_busy
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_update
</UL>

<P><STRONG><a name="[35]"></a>dfu_spi_send_start_packet</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, dfu_spi_master_lib.o(i.dfu_spi_send_start_packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = dfu_spi_send_start_packet &rArr; spi_master_com_tx &rArr; send_single_packet &rArr; spi_master_send_recv &rArr; spi_master_buffer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_com_tx
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_com_busy
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_update
</UL>

<P><STRONG><a name="[36]"></a>dfu_spi_send_stop_packet</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dfu_spi_master_lib.o(i.dfu_spi_send_stop_packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = dfu_spi_send_stop_packet &rArr; spi_master_com_tx &rArr; send_single_packet &rArr; spi_master_send_recv &rArr; spi_master_buffer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_com_tx
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_com_busy
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_update
</UL>

<P><STRONG><a name="[37]"></a>find_image_crc</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, main.o(i.find_image_crc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = find_image_crc &rArr; crc16_compute
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_compute
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_update
</UL>

<P><STRONG><a name="[55]"></a>find_image_size</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, main.o(i.find_image_size))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_update
</UL>

<P><STRONG><a name="[54]"></a>get_rand_num</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, main.o(i.get_rand_num))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_rand_num
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_update
</UL>

<P><STRONG><a name="[1f]"></a>main</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = main &rArr; test_update &rArr; dfu_spi_send_init_packet &rArr; spi_master_com_tx &rArr; send_single_packet &rArr; spi_master_send_recv &rArr; spi_master_buffer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_spi_init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_update
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[3a]"></a>nrf_delay_ms</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, nrf_delay.o(i.nrf_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_nrf_delay_c_532987f3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_com_init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_update
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>sd_nvic_ClearPendingIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, nrf_soc.o(i.sd_nvic_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_open
</UL>

<P><STRONG><a name="[51]"></a>sd_nvic_DisableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, nrf_soc.o(i.sd_nvic_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv
</UL>

<P><STRONG><a name="[4e]"></a>sd_nvic_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, nrf_soc.o(i.sd_nvic_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_open
</UL>

<P><STRONG><a name="[3d]"></a>sd_nvic_SetPriority</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, nrf_soc.o(i.sd_nvic_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sd_nvic_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_open
</UL>

<P><STRONG><a name="[50]"></a>sd_nvic_critical_region_enter</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, nrf_soc.o(i.sd_nvic_critical_region_enter))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv
</UL>

<P><STRONG><a name="[52]"></a>sd_nvic_critical_region_exit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, nrf_soc.o(i.sd_nvic_critical_region_exit))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv
</UL>

<P><STRONG><a name="[2f]"></a>spi_init</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dfu_spi_master_lib.o(i.spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = spi_init &rArr; spi_master_com_init &rArr; spi_master_open &rArr; spi_master_init_hw_instance
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_com_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_spi_init
</UL>

<P><STRONG><a name="[31]"></a>spi_master_com_busy</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, spi_master_com_interface.o(i.spi_master_com_busy))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_spi_send_stop_packet
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_spi_send_start_packet
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_spi_send_init_packet
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_spi_send_data_packet
</UL>

<P><STRONG><a name="[42]"></a>spi_master_com_init</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, spi_master_com_interface.o(i.spi_master_com_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = spi_master_com_init &rArr; spi_master_open &rArr; spi_master_init_hw_instance
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_open
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_evt_handler_reg
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
</UL>

<P><STRONG><a name="[33]"></a>spi_master_com_tx</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, spi_master_com_interface.o(i.spi_master_com_tx))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = spi_master_com_tx &rArr; send_single_packet &rArr; spi_master_send_recv &rArr; spi_master_buffer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_single_packet
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_spi_send_stop_packet
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_spi_send_start_packet
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_spi_send_init_packet
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_spi_send_data_packet
</UL>

<P><STRONG><a name="[22]"></a>spi_master_event_handler</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, spi_master_com_interface.o(i.spi_master_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = spi_master_event_handler &rArr; send_single_packet &rArr; spi_master_send_recv &rArr; spi_master_buffer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_single_packet
</UL>
<BR>[Address Reference Count : 1]<UL><LI> spi_master_com_interface.o(i.spi_master_com_init)
</UL>
<P><STRONG><a name="[48]"></a>spi_master_evt_handler_reg</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, spi_master.o(i.spi_master_evt_handler_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spi_master_evt_handler_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_get_instance
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_com_init
</UL>

<P><STRONG><a name="[47]"></a>spi_master_open</STRONG> (Thumb, 332 bytes, Stack size 24 bytes, spi_master.o(i.spi_master_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = spi_master_open &rArr; spi_master_init_hw_instance
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_init_hw_instance
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_get_instance
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_SetPriority
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_EnableIRQ
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_com_init
</UL>

<P><STRONG><a name="[41]"></a>spi_master_send_recv</STRONG> (Thumb, 314 bytes, Stack size 48 bytes, spi_master.o(i.spi_master_send_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = spi_master_send_recv &rArr; spi_master_buffer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_initial_bytes
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_get_instance
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_buffer_init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_critical_region_exit
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_critical_region_enter
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_EnableIRQ
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_DisableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_single_packet
</UL>

<P><STRONG><a name="[3c]"></a>test_update</STRONG> (Thumb, 260 bytes, Stack size 72 bytes, main.o(i.test_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = test_update &rArr; dfu_spi_send_init_packet &rArr; spi_master_com_tx &rArr; send_single_packet &rArr; spi_master_send_recv &rArr; spi_master_buffer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_spi_send_stop_packet
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_spi_send_start_packet
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_spi_send_init_packet
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dfu_spi_send_data_packet
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_compute
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_rand_num
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_image_size
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_image_crc
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[39]"></a>nrf_gpio_pin_clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(i.nrf_gpio_pin_clear))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_update
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(i.nrf_gpio_pin_set))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_update
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3e]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, nrf_soc.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sd_nvic_SetPriority
</UL>

<P><STRONG><a name="[40]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, spi_master_com_interface.o(i.nrf_gpio_pin_set))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_single_packet
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_com_init
</UL>

<P><STRONG><a name="[3f]"></a>send_single_packet</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, spi_master_com_interface.o(i.send_single_packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = send_single_packet &rArr; spi_master_send_recv &rArr; spi_master_buffer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc16_compute
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_event_handler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_com_tx
</UL>

<P><STRONG><a name="[4c]"></a>nrf_gpio_cfg_input</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, spi_master.o(i.nrf_gpio_cfg_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_gpio_cfg_input
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_open
</UL>

<P><STRONG><a name="[4b]"></a>nrf_gpio_cfg_output</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, spi_master.o(i.nrf_gpio_cfg_output))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_open
</UL>

<P><STRONG><a name="[4a]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, spi_master.o(i.nrf_gpio_pin_set))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv_irq
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_open
</UL>

<P><STRONG><a name="[43]"></a>spi_master_buffer_init</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, spi_master.o(i.spi_master_buffer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = spi_master_buffer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv
</UL>

<P><STRONG><a name="[45]"></a>spi_master_buffer_release</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, spi_master.o(i.spi_master_buffer_release))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = spi_master_buffer_release
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv_irq
</UL>

<P><STRONG><a name="[2a]"></a>spi_master_get_instance</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, spi_master.o(i.spi_master_get_instance))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_TWI0_IRQHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_open
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_evt_handler_reg
</UL>

<P><STRONG><a name="[49]"></a>spi_master_init_hw_instance</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, spi_master.o(i.spi_master_init_hw_instance))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = spi_master_init_hw_instance
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_open
</UL>

<P><STRONG><a name="[4f]"></a>spi_master_send_initial_bytes</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, spi_master.o(i.spi_master_send_initial_bytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spi_master_send_initial_bytes
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv
</UL>

<P><STRONG><a name="[2b]"></a>spi_master_send_recv_irq</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, spi_master.o(i.spi_master_send_recv_irq))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = spi_master_send_recv_irq &rArr; spi_master_signal_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_signal_evt
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_buffer_release
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI0_TWI0_IRQHandler
</UL>

<P><STRONG><a name="[53]"></a>spi_master_signal_evt</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, spi_master.o(i.spi_master_signal_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spi_master_signal_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_master_send_recv_irq
</UL>

<P><STRONG><a name="[2d]"></a>is_disabled_in_debug_needed</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, system_nrf51.o(i.is_disabled_in_debug_needed))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[2c]"></a>is_manual_peripheral_setup_needed</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, system_nrf51.o(i.is_manual_peripheral_setup_needed))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
